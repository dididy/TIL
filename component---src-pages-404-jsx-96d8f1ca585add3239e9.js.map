{"version":3,"sources":["webpack:///./src/components/seo.jsx","webpack:///./src/pages/404.jsx"],"names":["SEO","description","lang","meta","keywords","title","query","render","data","metaDescription","site","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage"],"mappings":"2KAKA,SAASA,EAAT,GAEI,IADFC,EACC,EADDA,YAAaC,EACZ,EADYA,KAAMC,EAClB,EADkBA,KAAMC,EACxB,EADwBA,SAAUC,EAClC,EADkCA,MAEnC,OACE,kBAAC,cAAD,CACEC,MAAK,aAWLC,OAAQ,SAACC,GACP,IAAMC,EAAkBR,GAAeO,EAAKE,KAAKC,aAAaV,YAC9D,OACE,kBAACW,EAAA,EAAD,CACEC,eAAgB,CACdX,QAEFG,MAAOA,EACPS,cAAa,QAAUN,EAAKE,KAAKC,aAAaN,MAC9CF,KAAM,CACJ,CACEY,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASX,GAEX,CACEY,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAASX,GAEX,CACEU,KAAM,sBACNC,QAASP,IAGVU,OACCf,EAASgB,OAAS,EACd,CACAL,KAAM,WACNC,QAASZ,EAASiB,KAAK,OAEvB,IAELF,OAAOhB,MA/DlB,SAuEJH,EAAIsB,aAAe,CACjBrB,YAAa,GACbC,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGJ,QClFAuB,UARM,kBACnB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKlB,MAAM,mBACX,yCACA,yF","file":"component---src-pages-404-jsx-96d8f1ca585add3239e9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={graphql`\n      query DefaultSEOQuery {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.string),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}