{"componentChunkName":"component---src-templates-wiki-post-jsx","path":"/software-development-process/extreme-programming","result":{"data":{"markdownRemark":{"html":"<h1>익스트림 프로그래밍</h1>\n<h2>가치</h2>\n<blockquote>\n<p>의사소통</p>\n<p>단순성</p>\n<p>피드백</p>\n<p>용기</p>\n<p>존중</p>\n</blockquote>\n<h2>원칙</h2>\n<blockquote>\n<p>인간성</p>\n<p>경제성</p>\n<p>상호이익</p>\n<p>자기 유사성</p>\n<p>개선</p>\n<p>다양셩</p>\n<p>흐름</p>\n<p>잉여</p>\n<p>실패</p>\n<p>품질</p>\n</blockquote>\n<h2>실천방법</h2>\n<blockquote>\n<p>Whole Team</p>\n</blockquote>\n<ul>\n<li>모든 프로젝트에 참여하는 팀원들을 가리키며 개개인이 각자의 역할이 있고 그들의 역할의 중요성을 이야기함</li>\n<li><code>tester</code>, <code>interaction designers</code>, <code>architects</code>, <code>project</code> <code>managers</code>, <code>product managers</code>, <code>executives</code>, <code>technical writers</code>, <code>programmers</code> and <code>users</code> 로 구성</li>\n<li>가장 중요한 팀원은 <code>user</code>인데 왜냐하면 그들이 프로젝트의 키를 가지고 있는(stakeholder)일 뿐만 아니라 그들을 통해 요구사항(requirement)을 파악 할 수 있기 때문</li>\n</ul>\n<blockquote>\n<p>Planning Game</p>\n</blockquote>\n<ul>\n<li>\n<p>계획을 세우는데 중요한 두가지</p>\n<ul>\n<li>이번 반복(Iteration)에서는 어떤 개발 과정을 끝마칠 것인가?</li>\n<li>그 이후 개발 반복(iteration)에서는 무엇을 할것인가?</li>\n</ul>\n</li>\n<li>XP는 일반적으로 2주를 주기로 계획을 세우고 프로토 타입을 만들어서 최종 사용자 혹은 프로젝트를 의뢰한 의뢰인과 함께 무엇이 얼만큼 개발이 되었는지 혹은 알맞은 방향으로 개발이 진행이 되어가고 있는지 검사 혹은 회의함</li>\n<li>또한, 이를 통해서 소프트웨어 개발의 투명성을 확보 할 수가 있음</li>\n<li>기업의 입장에서 좋은 점은 그들의 실력및 가능성을 보여줄수 있는 기회로 사용될 수 있으며, 사용자 혹은 의뢰인 입장에서는 더욱 큰 금전적 손실이 발생하기 전에 프로젝트를 취소하고 다른 개발팀을 찾아 볼 수 있는 기회로 사용될 수도 있음</li>\n</ul>\n<blockquote>\n<p>Customer Tests</p>\n</blockquote>\n<ul>\n<li>가장 흔히 발생하는 소프트웨어 개발 실패중 하나는 개발이 끝난 제품 혹은 소프트웨어가 처음 사용자 혹은 의뢰인이 원했던것과 다르다는 것</li>\n<li>그렇기 때문에 XP에서는 반복적으로 커스토머 테스트를 거침</li>\n<li>이를 통해서 그들이 잘못 이해하고 있었던 부분에 대해서 수정을 거치기도 하며 더욱더 의뢰인 혹은 최종 사용자의 요구에 부합하는 소프트웨어를 만듬</li>\n</ul>\n<blockquote>\n<p>Small Releases</p>\n</blockquote>\n<ul>\n<li>이 실천 방안을 통해서 개발자는 주기적으로 프로토 타입을 의뢰인에게 보여줌</li>\n<li>이를 통해서 의뢰인은 제한된 기능을 가지고 있지만 실제로 작동이 되는 데모 모델을 볼 수가 있으며 추가 사항을 요구 할 수 있음</li>\n<li>개발자에게 있어서는 현재까지의 개발 상황이 올바른 길로 가고 있음을 알 수 있음</li>\n</ul>\n<blockquote>\n<p>Simple Design</p>\n</blockquote>\n<ul>\n<li>XP에서 모든 코딩을 가능한 간단하게 할것을 강조함</li>\n<li>보통의 프로젝트 개발 혹은 코딩의 경우 기능이 더해지면 더 해질 수록 복잡해 지기 때문</li>\n</ul>\n<blockquote>\n<p>Test-Driven Development</p>\n</blockquote>\n<ul>\n<li>테스트를 기반으로한 개발은 XP에서 가장 중요한 실천 방안중 하나이다. 테스트를 거치고 코딩을 하며 프로젝트를 개발해 나감</li>\n</ul>\n<blockquote>\n<p>Pair Programming</p>\n</blockquote>\n<ul>\n<li>두명 혹은 그 이상의 프로그래머가 함께 코딩을 하는 것을 말함</li>\n<li>Driver와 Navigator로 역할로 나눠짐</li>\n</ul>","frontmatter":{"path":"/software-development-process/extreme-programming","title":"Extreme Programming"}}},"pageContext":{}}}